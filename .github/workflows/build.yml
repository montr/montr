name: Build

on: [ push, pull_request, repository_dispatch ]

env:
  ConnectionStrings:Default: Server=localhost;Port=5432;Database=host;User Id=postgres;Password=secret;
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_MULTILEVEL_LOOKUP: false

jobs:
  build:

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        configuration: [ Debug ]
        os: [ ubuntu-latest ]
        # os: [ macos-latest, ubuntu-latest, windows-latest ]
        # language: [ 'csharp', 'typescript', 'javascript' ]

    runs-on: ${{ matrix.os }}

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: host
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3.3.0

      - uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: '7.x'

      - run: dotnet --info

      # Initializes the CodeQL tools for scanning.
      # - name: Initialize CodeQL
      #   uses: github/codeql-action/init@v2
      #   with:
      #     languages: ${{ matrix.language }}

      - run: dotnet build ./src/Montr.sln --configuration "${{ matrix.configuration }}"

      # - name: Perform CodeQL Analysis
      #   uses: github/codeql-action/analyze@v2

      - run: dotnet test ./src/Montr.Migration.Tests --configuration "${{ matrix.configuration }}" --no-build
      - run: dotnet test ./src/Montr.Core.Tests --configuration "${{ matrix.configuration }}" --no-build
      - run: dotnet test ./src/Montr.Automate.Tests --configuration "${{ matrix.configuration }}" --no-build
      - run: dotnet test ./src/Montr.Metadata.Tests --configuration "${{ matrix.configuration }}" --no-build
      - run: dotnet test ./src/Montr.Idx.Tests --configuration "${{ matrix.configuration }}" --no-build
      - run: dotnet test ./src/Montr.MasterData.Tests --configuration "${{ matrix.configuration }}" --no-build
      - run: dotnet test ./src/Montr.MasterData.Plugin.GovRu.Tests --configuration "${{ matrix.configuration }}" --no-build
      - run: dotnet test ./src/Montr.Kompany.Tests --configuration "${{ matrix.configuration }}" --no-build
      - run: dotnet test ./src/Montr.Settings.Tests --configuration "${{ matrix.configuration }}" --no-build
      - run: dotnet test ./src/Montr.Tasks.Tests --configuration "${{ matrix.configuration }}" --no-build
      # - run: dotnet test ./src/Montr.Tendr.Tests --configuration "${{ matrix.configuration }}" --no-build
      - run: dotnet test ./src/Montr.Worker.Hangfire.Tests --configuration "${{ matrix.configuration }}" --no-build

      - uses: actions/setup-node@v3.6.0
        with:
          node-version: 16

      - run: |
          npm ci
          npm run build-prod
          # - run: npm test
        working-directory: ./src/ui
        env:
          CI: true

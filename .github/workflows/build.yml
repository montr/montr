name: Build

env:
  ConnectionStrings:Default: Server=localhost;Port=5432;Database=host;User Id=postgres;Password=secret;
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

on: [push, repository_dispatch]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_MULTILEVEL_LOOKUP: false

    services:
      db:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: host
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/setup-dotnet@v1.8.2
        with:
          dotnet-version: '5.0.100'

      - run: dotnet build ./src/Montr.sln

      - run: dotnet test ./src/Montr.Core.Tests
      - run: dotnet test ./src/Montr.Automate.Tests
      - run: dotnet test ./src/Montr.Metadata.Tests
      - run: dotnet test ./src/Montr.Idx.Tests
      - run: dotnet test ./src/Montr.MasterData.Tests
      - run: dotnet test ./src/Montr.MasterData.Plugin.GovRu.Tests
      - run: dotnet test ./src/Montr.Kompany.Tests
      #- run: dotnet test ./src/Montr.Tendr.Tests

      - uses: actions/setup-node@v2.4.0
        with:
          node-version: '12.x'

      - run: |
          npm ci
          npm run build-prod
          # - run: npm test
        working-directory: ./src/ui
        env:
          CI: true
